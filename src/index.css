@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --light: #f6f6f9;
  --primary: #1976D2;
  --light-primary: #CFE8FF;
  --grey: #eee;
  --dark-grey: #AAAAAA;
  --dark: #363949;
  --danger: #D32F2F;
--light-danger: #FECDD3;
  --warning: #FBC02D;
  --light-warning: #FFF2C6;
  --success: #388E3C;
  --light-success: #BBF7D0;
}

.App{
  background-color: var(--grey) !important;
}

body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

/* style button */
/* Hide the default checkbox */
.containerbtn .checkbox {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.containerbtn {
  display: block;
  position: relative;
  cursor: pointer;
  font-size: 25px;
  user-select: none;
}

/* Create a custom checkbox */
.checkmark {
  position: relative;
  top: 0;
  left: 0;
  height: 1.3em;
  width: 1.3em;
  background: black;
  border-radius: 50px;
  transition: all 0.7s;
  --spread: 20px;
}

/* When the checkbox is checked, add a blue background */
.containerbtn .checkbox:checked ~ .checkmark {
  background: black;
  box-shadow: -10px -10px var(--spread) 0px #FFD700, 0 -10px var(--spread) 0px #FFD700, 10px -10px var(--spread) 0px #FFD700, 10px 0 var(--spread) 0px #FFD700, 10px 10px var(--spread) 0px #FFD700, 0 10px var(--spread) 0px #FFD700, -10px 10px var(--spread) 0px #FFD700;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.containerbtn .checkbox:checked ~ .checkmark:after {
  display: block;
  animation: checkmark 0.3s cubic-bezier(0.25, 0.1, 0.25, 1) forwards;
}

/* Style the checkmark/indicator */
.containerbtn .checkmark:after {
  left: 0.5em;
  top: 0.25em;
  width: 0.25em;
  height: 0.5em;
  border: solid #FFD700;
  border-width: 0 0.15em 0.15em 0;
  transform: rotate(45deg);
}

/* Add animation for checkmark */
@keyframes checkmark {
  from {
    transform: rotate(-45deg) scale(0);
  }

  to {
    transform: rotate(45deg) scale(1);
  }
}

/* style sidebar */
/* Style the label text */
.containerbtn span {
  margin-left: 2em;
  color: black;
  font-weight: bold;
}

.sidebar{
  position: fixed;
  top: 0;
  left: 0;
  background: var(--light);
  width: 230px;
  height: 100%;
  z-index: 2000;
  overflow-x: hidden;
  scrollbar-width: none;
  transition: all 0.3s ease;
}

.sidebar::-webkit-scrollbar{
  display: none;
}

.sidebar.close{
  width: 60px;
}

.sidebar .logo{
  font-size: 24px;
  font-weight: 700;
  height: 56px;
  display: flex;
  align-items: center;
  color: var(--primary);
  z-index: 500;
  padding-bottom: 20px;
  box-sizing: content-box;
}

.sidebar .logo .logo-name span{
  color: var(--dark);
}

.sidebar .logo .bx{
  min-width: 60px;
  display: flex;
  justify-content: center;
  font-size: 2.2rem;
}

.sidebar .side-menu{
  width: 100%;
  margin-top: 48px;
}

.sidebar .side-menu li{
  height: 48px;
  background: transparent;
  margin-left: 6px;
  border-radius: 48px 0 0 48px;
  padding: 4px;
}

.sidebar .side-menu li.active{
  background: var(--grey);
  position: relative;
}

.sidebar .side-menu li.active::before{
  content: "";
  position: absolute;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  top: -40px;
  right: 0;
  box-shadow: 20px 20px 0 var(--grey);
  z-index: -1;
}

.sidebar .side-menu li.active::after{
  content: "";
  position: absolute;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  bottom: -40px;
  right: 0;
  box-shadow: 20px -20px 0 var(--grey);
  z-index: -1;
}

.sidebar .side-menu li a{
  width: 100%;
  height: 100%;
  background: var(--light);
  display: flex;
  align-items: center;
  border-radius: 48px;
  font-size: 16px;
  color: var(--dark);
  white-space: nowrap;
  overflow-x: hidden;
  transition: all 0.3s ease;
}

.sidebar .side-menu li.active a{
  color: var(--success);
}

.sidebar.close .side-menu li a{
  width: calc(48px - (4px * 2));
  transition: all 0.3s ease;
}

.sidebar .side-menu li a .bx{
  min-width: calc(60px - ((4px + 6px) * 2));
  display: flex;
  font-size: 1.6rem;
  justify-content: center;
}

.sidebar .side-menu li a.logout{
  color: var(--danger);
}

.content{
  position: relative;
  width: calc(100% - 230px);
  left: 230px;
  transition: all 0.3s ease;
}

.sidebar.close~.content{
  width: calc(100% - 60px);
  left: 60px;
}

/* style card */


.card_sensor {
  box-sizing: border-box;
  width: 22%;
  height: 200px;
  border: 1px solid white;
  box-shadow: 12px 17px 51px rgba(0, 0, 0, 0.22);
  backdrop-filter: blur(6px);
  border-radius: 17px;
  text-align: center;
  cursor: pointer;
  transition: all 0.5s;
  flex-direction: column;
  display: flex;
  align-items: center;
  justify-content: center;
  user-select: none;
  font-weight: bolder;
  color: black;
}

.card_sensor:hover {
  border: 1px solid black;
  transform: scale(1.05);
}

.card_sensor:active {
  transform: scale(0.95) rotateZ(1.7deg);
}
.danger_dust{
  /* animation-name: rotate_fan;
  animation-duration: 0s;
  animation-iteration-count: infinite; */
  animation: danger_level 1s linear infinite;
}

@keyframes danger_level{
  0% {
    background-color: red;
  }
  50% {
    background-color: blue;
  }
  100% {
    background-color: red;
  }
}

.card {
  position: relative;
  width: 30%;
  height: 200px;
  background-color: #f2f2f2;
  border-radius: 10px;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  perspective: 1000px;
  box-shadow: 0 0 0 5px #ffffff80;
  transition: all 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.card i {
  width: 48px;
  fill: #333;
  transition: all 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.card:hover {
  transform: scale(1.05);
  box-shadow: 0 8px 16px rgba(255, 255, 255, 0.2);
}

.card__content {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  padding: 20px;
  box-sizing: border-box;
  background-color: #f2f2f2;
  transform: rotateX(-90deg);
  transform-origin: bottom;
  transition: all 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.card:hover .card__content {
  transform: rotateX(0deg);
}

.card__title {
  margin: 0;
  font-size: 24px;
  color: #333;
  font-weight: 700;
}

.card:hover i {
  scale: 0;
}

.card__description {
  margin: 10px 0 0;
  font-size: 14px;
  color: #777;
  line-height: 1.4;
}


/* time filter styles */

.Time_filter_wrapper{
  display: flex;
  flex-direction: column;
  padding: 4px;
  justify-content: space-between;
  height: 123px;
}
.Time_filter_input{
  min-width: 32px;
  border-radius: 14px;
  padding: 0.6em;
  border-radius: 14px;
  border: 1px solid #333;
  color: black;
  outline: none;
}
.Clear_time_filter_btn{
  border: 0;
  background: #111;
  color: #fff;
  padding: 0.68em;
  border-radius: 14px;
  font-weight: bold;
  border: 1px #111 solid;
}
.Clear_time_filter_btn:hover{
  background: #fff;
  color: #111;
}


/* style loader */
.preloader {
  position: absolute;
  margin-left: -55px;
  margin-top: -100px;
  height: 110px;
  width: 110px;
  left: 50%;
  top: 50%;
}

svg {
  width: 110px;
  height: 110px;
}

path {
  stroke: #9ea1a4;
  stroke-width: 0.25;
  fill: #241E20;
}

#cloud {
  position: relative;
  z-index: 2;
}

#cloud path {
  fill: #efefef;
}

#sun {
  margin-left: -10px;
  margin-top: 6px;
  opacity: 0;
  width: 60px;
  height: 60px;
  position: absolute;
  left: 45px;
  top: 15px;
  z-index: 1;
  animation-name: rotate;
  animation-duration: 16000ms;
  animation-iteration-count: infinite;
  animation-timing-function: linear;
}

#sun path {
  stroke-width: 0.18;
  fill: #9ea1a4;
}

@keyframes rotate {
  0% {
    transform: rotateZ(0deg);
  }

  100% {
    transform: rotateZ(360deg);
  }
}

/* Rain */
.rain {
  position: absolute;
  width: 70px;
  height: 70px;
  margin-top: -32px;
  margin-left: 19px;
}

.drop {
  opacity: 1;
  background: #9ea1a4;
  display: block;
  float: left;
  width: 3px;
  height: 10px;
  margin-left: 4px;
  border-radius: 0px 0px 6px 6px;
  animation-name: drop;
  animation-duration: 350ms;
  animation-iteration-count: infinite;
}

.drop:nth-child(1) {
  animation-delay: -130ms;
}

.drop:nth-child(2) {
  animation-delay: -240ms;
}

.drop:nth-child(3) {
  animation-delay: -390ms;
}

.drop:nth-child(4) {
  animation-delay: -525ms;
}

.drop:nth-child(5) {
  animation-delay: -640ms;
}

.drop:nth-child(6) {
  animation-delay: -790ms;
}

.drop:nth-child(7) {
  animation-delay: -900ms;
}

.drop:nth-child(8) {
  animation-delay: -1050ms;
}

.drop:nth-child(9) {
  animation-delay: -1130ms;
}

.drop:nth-child(10) {
  animation-delay: -1300ms;
}

@keyframes drop {
  50% {
    height: 45px;
    opacity: 0;
  }

  51% {
    opacity: 0;
  }

  100% {
    height: 1px;
    opacity: 0;
  }
}

.text {
  font-family: Helvetica, 'Helvetica Neue', sans-serif;
  letter-spacing: 1px;
  text-align: center;
  margin-left: -43px;
  font-weight: bold;
  margin-top: 20px;
  font-size: 11px;
  color: #a0a0a0;
  width: 200px;
}

/* fan animation */

.active_fan{
  /* animation-name: rotate_fan;
  animation-duration: 0s;
  animation-iteration-count: infinite; */
  animation: rotate_fan 1s linear infinite;
}

@keyframes rotate_fan{
  from{
    transform: rotate(0);
  }to{
    transform: rotate(360deg);
  }
}

.toggle-switch {
  position: relative;
  display: inline-block;
  width: 60px;
  height: 34px;
}

.toggle-input {
  display: none;
}

.toggle-label {
  position: absolute;
  top: 0;
  left: 0;
  width: 60px;
  height: 34px;
  border-radius: 17px;
  background-color: #ccc;
  cursor: pointer;
  transition: background-color 0.4s ease;
}

.toggle-label:before {
  content: '';
  position: absolute;
  top: 3px;
  left: 3px;
  width: 28px;
  height: 28px;
  border-radius: 50%;
  background-color: #fff;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
  transition: transform 0.4s ease;
}

.toggle-input:checked + .toggle-label {
  background-color: #86d993;
}

.toggle-input:checked + .toggle-label:before {
  transform: translateX(26px);
}